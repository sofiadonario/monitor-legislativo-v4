# Production Nginx configuration for Monitor Legislativo v4
# Optimized for performance, security, and caching

user appuser;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx/nginx.pid;

# Worker connections and performance
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 16M;
    
    # Hide nginx version
    server_tokens off;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml;
    
    # Brotli compression (if available)
    # brotli on;
    # brotli_comp_level 4;
    # brotli_types text/css application/javascript application/json image/svg+xml;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=50r/s;
    
    # Security headers (applied to all responses)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://*.shinyapps.io; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https://*.openstreetmap.org https://*.tile.openstreetmap.org; connect-src 'self' https://*.railway.app https://*.lexml.gov.br https://*.shinyapps.io; frame-src 'self' https://*.shinyapps.io; object-src 'none'; base-uri 'self';" always;
    
    # HSTS (uncomment for HTTPS)
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    server {
        listen 8080;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;
        
        # Error pages
        error_page 404 /index.html;
        error_page 500 502 503 504 /index.html;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # API proxy (if backend is available)
        location /api/ {
            # Apply rate limiting
            limit_req zone=api burst=20 nodelay;
            
            # Proxy settings would go here if backend is co-located
            # proxy_pass http://backend;
            # proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto $scheme;
            
            # For SPA without backend proxy, return 404
            return 404;
        }
        
        # Static assets with long cache
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            limit_req zone=general burst=100 nodelay;
            
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
            
            # Handle CORS for fonts
            location ~* \.(woff|woff2|ttf|eot)$ {
                add_header Access-Control-Allow-Origin *;
                add_header Cache-Control "public, immutable";
                expires 1y;
            }
        }
        
        # JavaScript and CSS with medium cache
        location ~* \.(js|css)$ {
            expires 30d;
            add_header Cache-Control "public";
        }
        
        # HTML files with no cache (for SPA updates)
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
        
        # Main SPA route
        location / {
            limit_req zone=general burst=50 nodelay;
            
            try_files $uri $uri/ /index.html;
            
            # No cache for main HTML
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
        
        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Deny access to backup files
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Block common exploit attempts
        location ~* (\.php|\.asp|\.aspx|\.jsp)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Robots.txt
        location = /robots.txt {
            access_log off;
            log_not_found off;
        }
        
        # Favicon
        location = /favicon.ico {
            access_log off;
            log_not_found off;
            expires 30d;
        }
        
        # Monitor nginx status (for internal monitoring)
        location = /nginx_status {
            stub_status;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
    }
    
    # Additional server block for metrics/monitoring if needed
    server {
        listen 9090;
        server_name _;
        
        location = /metrics {
            access_log off;
            stub_status;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
        
        location / {
            return 404;
        }
    }
}