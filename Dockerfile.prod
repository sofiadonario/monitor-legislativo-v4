# Production Dockerfile for Monitor Legislativo v4
# Multi-stage build for optimized production image

# =============================================================================
# Stage 1: Build Environment
# =============================================================================
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./
COPY vite.config.prod.ts ./

# Install dependencies
RUN npm ci --only=production=false && npm cache clean --force

# Copy source code
COPY src ./src
COPY public ./public
COPY index.html ./

# Set build environment variables
ENV NODE_ENV=production
ENV VITE_ENV=production

# Run build
RUN npm run build:prod

# Remove development dependencies
RUN npm prune --production

# =============================================================================
# Stage 2: Production Image
# =============================================================================
FROM nginx:alpine AS production

# Install security updates
RUN apk update && apk upgrade && apk add --no-cache \
    curl \
    tzdata

# Set timezone
ENV TZ=America/Sao_Paulo
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Create non-root user
RUN addgroup -g 1001 -S appgroup && \
    adduser -S appuser -u 1001 -G appgroup

# Copy built application
COPY --from=builder --chown=appuser:appgroup /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.prod.conf /etc/nginx/nginx.conf

# Create directories for nginx
RUN mkdir -p /var/cache/nginx/client_temp && \
    mkdir -p /var/cache/nginx/proxy_temp && \
    mkdir -p /var/cache/nginx/fastcgi_temp && \
    mkdir -p /var/cache/nginx/uwsgi_temp && \
    mkdir -p /var/cache/nginx/scgi_temp && \
    chown -R appuser:appgroup /var/cache/nginx && \
    chown -R appuser:appgroup /var/log/nginx && \
    chown -R appuser:appgroup /etc/nginx/conf.d

# Create nginx PID directory
RUN mkdir -p /var/run/nginx && \
    chown -R appuser:appuser /var/run/nginx

# Switch to non-root user
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Expose port
EXPOSE 8080

# Labels for metadata
LABEL maintainer="Monitor Legislativo Team" \
      description="Monitor Legislativo v4 - Production Frontend" \
      version="1.0.0" \
      org.opencontainers.image.title="Monitor Legislativo v4" \
      org.opencontainers.image.description="Academic research platform for Brazilian transport legislation" \
      org.opencontainers.image.source="https://github.com/sofiadonario/monitor-legislativo-v4" \
      org.opencontainers.image.vendor="MackIntegridade" \
      org.opencontainers.image.licenses="MIT"

# Start nginx
CMD ["nginx", "-g", "daemon off;"]

# =============================================================================
# Development Stage (for multi-target builds)
# =============================================================================
FROM node:18-alpine AS development

WORKDIR /app

# Install development dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git

# Copy package files
COPY package*.json ./

# Install all dependencies
RUN npm ci

# Copy source code
COPY . .

# Expose development port
EXPOSE 5173

# Start development server
CMD ["npm", "run", "dev", "--", "--host", "0.0.0.0"]