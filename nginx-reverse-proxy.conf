# Enhanced nginx Reverse Proxy Configuration
# Monitor Legislativo v4 - Production Load Balancing & Proxy
# Phase 4 Week 13: Complete reverse proxy with load balancing

user appuser;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx/nginx.pid;

# Worker connections and performance
events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Character encoding
    charset utf-8;
    
    # Logging format with performance metrics
    log_format main_ext '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        'rt=$request_time uct="$upstream_connect_time" '
                        'uht="$upstream_header_time" urt="$upstream_response_time" '
                        'upstream=$upstream_addr cache=$upstream_cache_status';
    
    access_log /var/log/nginx/access.log main_ext;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    types_hash_max_size 2048;
    client_max_body_size 50M;
    client_body_timeout 30s;
    client_header_timeout 30s;
    send_timeout 30s;
    
    # Buffer sizes
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # Hide nginx version
    server_tokens off;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/x-component
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/xml+rss
        application/atom+xml
        image/svg+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject;
    
    # Brotli compression (if module available)
    # brotli on;
    # brotli_comp_level 4;
    # brotli_types text/css application/javascript application/json image/svg+xml;
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=search:10m rate=20r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    
    # Upstream servers for load balancing
    upstream backend_api {
        least_conn;
        server api1:8000 max_fails=3 fail_timeout=30s weight=1;
        server api2:8000 max_fails=3 fail_timeout=30s weight=1;
        # Backup server
        server api3:8000 max_fails=3 fail_timeout=30s backup;
        
        # Health check (nginx plus feature, fallback to manual)
        # health_check interval=10s fails=3 passes=2;
        
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }
    
    upstream shiny_analytics {
        ip_hash;  # Session affinity for R Shiny
        server shiny1:3838 max_fails=2 fail_timeout=30s;
        server shiny2:3838 max_fails=2 fail_timeout=30s;
        
        keepalive 16;
    }
    
    upstream websocket_backend {
        least_conn;
        server ws1:8001 max_fails=2 fail_timeout=30s;
        server ws2:8001 max_fails=2 fail_timeout=30s;
        
        keepalive 16;
    }
    
    # Proxy cache settings
    proxy_cache_path /var/cache/nginx/proxy 
                     levels=1:2 
                     keys_zone=api_cache:100m 
                     max_size=1g 
                     inactive=60m 
                     use_temp_path=off;
    
    # Map for cache bypassing
    map $request_method $bypass_cache {
        POST 1;
        PUT 1;
        DELETE 1;
        default 0;
    }
    
    # Security headers (applied to all responses)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Robots-Tag "noindex, nofollow" always;
    
    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://*.shinyapps.io https://www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https://*.openstreetmap.org https://*.tile.openstreetmap.org; connect-src 'self' https://*.railway.app https://*.lexml.gov.br https://*.shinyapps.io wss: ws:; frame-src 'self' https://*.shinyapps.io; object-src 'none'; base-uri 'self'; form-action 'self';" always;
    
    # HTTPS redirect (production only)
    server {
        listen 80;
        server_name monitor-legislativo.com www.monitor-legislativo.com;
        
        # Redirect all HTTP traffic to HTTPS
        return 301 https://$server_name$request_uri;
    }
    
    # Main HTTPS server
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name monitor-legislativo.com www.monitor-legislativo.com;
        
        # SSL configuration
        ssl_certificate /etc/nginx/ssl/monitor-legislativo.crt;
        ssl_certificate_key /etc/nginx/ssl/monitor-legislativo.key;
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;
        
        # SSL settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_ecdh_curve secp384r1;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;
        
        # HSTS
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        
        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
        
        # Static file serving
        root /usr/share/nginx/html;
        index index.html;
        
        # Connection limiting
        limit_conn addr 50;
        
        # Health check endpoint
        location = /health {
            access_log off;
            return 200 "nginx healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Nginx status (internal only)
        location = /nginx_status {
            stub_status;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
        
        # API endpoints with load balancing
        location /api/ {
            limit_req zone=api burst=50 nodelay;
            
            # Proxy settings
            proxy_pass http://backend_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            
            # HTTP version for upstream
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Cache for GET requests
            proxy_cache api_cache;
            proxy_cache_bypass $bypass_cache;
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            add_header X-Cache-Status $upstream_cache_status;
            
            # Error handling
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
        }
        
        # WebSocket support for real-time features
        location /ws/ {
            proxy_pass http://websocket_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific timeouts
            proxy_connect_timeout 7s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # No caching for WebSocket
            proxy_cache off;
        }
        
        # R Shiny analytics with session affinity
        location /analytics/ {
            limit_req zone=general burst=20 nodelay;
            
            proxy_pass http://shiny_analytics/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Shiny specific settings
            proxy_redirect off;
            proxy_buffering off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Longer timeouts for R Shiny
            proxy_connect_timeout 10s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
        
        # Static assets with aggressive caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
            limit_req zone=general burst=100 nodelay;
            
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
            
            # CORS for fonts
            location ~* \.(woff|woff2|ttf|eot)$ {
                add_header Access-Control-Allow-Origin *;
            }
            
            # Gzip static files
            gzip_static on;
        }
        
        # Versioned assets (Vite fingerprinted files)
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)\.[a-f0-9]{8,}\. {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
        }
        
        # HTML files with no cache (for SPA updates)
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
        
        # Main SPA route with fallback
        location / {
            limit_req zone=general burst=50 nodelay;
            
            try_files $uri $uri/ @fallback;
            
            # No cache for main HTML
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
        
        # Fallback for SPA routing
        location @fallback {
            rewrite ^.*$ /index.html last;
        }
        
        # Security: Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Security: Block common exploit attempts
        location ~* (\.(php|asp|aspx|jsp|cgi)$|wp-admin|wp-login|xmlrpc\.php) {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Robots.txt
        location = /robots.txt {
            access_log off;
            log_not_found off;
        }
        
        # Favicon
        location = /favicon.ico {
            access_log off;
            log_not_found off;
            expires 30d;
        }
        
        # Security.txt
        location = /.well-known/security.txt {
            access_log off;
            return 200 "Contact: security@monitor-legislativo.com\nExpires: 2025-12-31T23:59:59.000Z\nPreferred-Languages: pt, en\n";
            add_header Content-Type text/plain;
        }
    }
    
    # Development/staging server (HTTP only)
    server {
        listen 8080;
        server_name localhost _;
        root /usr/share/nginx/html;
        index index.html;
        
        # Development-specific settings (less strict)
        add_header X-Development "true" always;
        
        # All locations from HTTPS server but without SSL
        # Health check
        location = /health {
            access_log off;
            return 200 "nginx healthy (dev)\n";
            add_header Content-Type text/plain;
        }
        
        # API proxy for development
        location /api/ {
            limit_req zone=api burst=50 nodelay;
            
            proxy_pass http://backend_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Development: No caching
            proxy_cache off;
            add_header X-Cache-Status "BYPASS";
        }
        
        # SPA routing
        location / {
            try_files $uri $uri/ /index.html;
        }
    }
    
    # Load balancer health check endpoint
    server {
        listen 9090;
        server_name _;
        
        location = /lb-health {
            access_log off;
            
            # Check upstream health
            content_by_lua_block {
                local status = "healthy"
                ngx.say('{"status":"' .. status .. '","timestamp":"' .. ngx.time() .. '"}')
            }
            
            add_header Content-Type application/json;
        }
        
        location = /upstream-status {
            access_log off;
            upstream_show;
        }
        
        location / {
            return 404;
        }
    }
}

# TCP/UDP load balancing (stream module)
stream {
    # Database connection load balancing
    upstream postgres_backend {
        least_conn;
        server db1:5432 max_fails=3 fail_timeout=30s;
        server db2:5432 max_fails=3 fail_timeout=30s backup;
    }
    
    # Redis cluster load balancing
    upstream redis_backend {
        least_conn;
        server redis1:6379 max_fails=2 fail_timeout=30s;
        server redis2:6379 max_fails=2 fail_timeout=30s;
    }
    
    # PostgreSQL proxy
    server {
        listen 5432;
        proxy_pass postgres_backend;
        proxy_timeout 1s;
        proxy_responses 1;
        error_log /var/log/nginx/postgres_error.log;
    }
    
    # Redis proxy
    server {
        listen 6379;
        proxy_pass redis_backend;
        proxy_timeout 1s;
        proxy_responses 1;
        error_log /var/log/nginx/redis_error.log;
    }
}